# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    container: ghcr.io/acts-project/${{ matrix.image }}:v11
    strategy:
      matrix:
        image:
          - ubuntu2004
          
    # Setup the environment
    env:
      SETUP: true
      INSTALL_DIR: ${{ github.workspace }}/install
      RUN_DIR: ${{ github.workspace }}/run
      
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      # Init the submodule
      - name: Initialise git submodules
        run: > 
          git submodule update --init &&
          git --git-dir=acts/.git log | head -1 > acts.checkout.commit &&
          git restore --source gh-pages -- xvfz data/build/installed.tgz &&
          tar xvfz data/build/installed.tgz && 
          export PERFORM_BUILD=`diff acts.checkout.commit installed/acts.build.commit

      # Configure CMake
      - name: Configure CMake
        if: ${PERFORM_BUILD}
        run: >
          ${SETUP} &&
          cmake -B build -S acts
          -GNinja
          -DCMAKE_BUILD_TYPE=Release
          -DCMAKE_CXX_FLAGS=-Werror
          -DCMAKE_INSTALL_PREFIX="${INSTALL_DIR}"
          -DACTS_BUILD_UNITTESTS=OFF
          -DACTS_BUILD_BENCHMARKS=OFF
          -DACTS_BUILD_INTEGRATIONTESTS=OFF
          -DACTS_BUILD_PLUGIN_DD4HEP=ON
          -DACTS_BUILD_PLUGIN_DIGITIZATION=ON
          -DACTS_BUILD_PLUGIN_IDENTIFICATION=ON
          -DACTS_BUILD_PLUGIN_JSON=ON
          -DACTS_BUILD_FATRAS=ON
          -DACTS_BUILD_FATRAS_GEANT4=ON
          -DACTS_BUILD_EXAMPLES=ON
          -DACTS_BUILD_EXAMPLES_DD4HEP=ON
          -DACTS_BUILD_EXAMPLES_GEANT4=ON
          -DACTS_BUILD_EXAMPLES_HEPMC3=ON
          -DACTS_BUILD_EXAMPLES_PYTHIA8=ON
          -DACTS_LOG_FAILURE_THRESHOLD=WARNING
          
      # Build and Install ACTS, github runners are dual-core VMS
      - name: Build ACTS
        if: ${PERFORM_BUILD}
        run: cmake --build build -j2 -- install

      # Setup run environment 
      - name: Setup run environment
        run:  cd /usr/local && /bin/bash -c "source bin/thisdd4hep.sh" &&  mkdir ${RUN_DIR} && cd ${RUN_DIR}
            
      # Muon chain test
      - name: Multi/Single muon chain test
        run: /bin/bash -c "source ${GITHUB_WORKSPACE}/scripts/run_pdgX_mpY_nZ.sh 13 100 1000 10"


